# This prompt inspired by gf3, sindresorhus, alrra, and mathiasbynens.
# but customized to me. <3

TMPMV=
TMPMN=
unset MODULE_VERSION
unset MODULE_NAME

function pver()
{
    TMPMV=$(sed -nr 's/^\s{2,4}"version":\s*"([^ "]+)".*$/\1/p' "$1")
    TMPMN=$(sed -nr 's/^\s{2,4}"name":\s*"([^ "]+)".*$/\1/p' "$1")
}

function pvers()
{
    if [ -f "./package.json" ]; then
        pver "./package.json"
#        TMPMV=$(sed -nr 's/^\s*"version":\s*"([^"]+)".*$/\1/p' ./package.json)
#        TMPMN=$(sed -nr 's/^\s{2,4}"name":\s*"([^ "]+)".*$/\1/p' ./package.json)
    elif [ -f "../package.json" ]; then
        pver "../package.json"
#        TMPMV=$(sed -nr 's/^\s*"version": "([^"]+)".*$/\1/p' ../package.json)
#        TMPMN=$(sed -nr 's/^\s{2,4}"name":\s*"([^ "]+)".*$/\1/p' ../package.json)
    elif [ -f "../../package.json" ]; then
        pver "../../package.json"
#        TMPMV=$(sed -nr 's/^\s*"version": "([^"]+)".*$/\1/p' ../../package.json)
#        TMPMN=$(sed -nr 's/^\s{2,4}"name":\s*"([^ "]+)".*$/\1/p' ../../package.json)
    fi
}

parse_git_branch() {
	local s='';

    pvers

    ref=$(git symbolic-ref -q HEAD 2> /dev/null) || return

	# Ensure the index is up to date.
	git update-index --really-refresh -q &>/dev/null;

	# Check for uncommitted changes in the index.
	if ! $(git diff --quiet --ignore-submodules --cached); then
		s+='+';
	fi;

	# Check for unstaged changes.
	if ! $(git diff-files --quiet --ignore-submodules --); then
		s+='!';
	fi;

	# Check for untracked files.
	if [ -n "$(git ls-files --others --exclude-standard)" ]; then
		s+='?';
	fi;

	# Check for stashed files.
	if $(git rev-parse --verify refs/stash &>/dev/null); then
		s+='$';
	fi;

	if [ "x${s}" != "x" ]; then
		s="[${s}]";
	fi;

    local extra='';

    if [ ! -z "$TMPMN" ]; then
        extra="${TMPMN}"'@'"${TMPMV}/"
    fi

  	printf "${1:-(%s%s)}${s}" "$extra" "${ref#refs/heads/}"
}

pimp_prompt() {
  local        BLUE="\[\033[0;34m\]"
  local   BLUE_BOLD="\[\033[1;34m\]"
  local         RED="\[\033[0;31m\]"
  local   LIGHT_RED="\[\033[1;31m\]"
  local       GREEN="\[\033[0;32m\]"
  local LIGHT_GREEN="\[\033[1;32m\]"
  local       WHITE="\[\033[0;37m\]"
  local  WHITE_BOLD="\[\033[1;37m\]"
  local  LIGHT_GRAY="\[\033[0;37m\]"

  case $TERM in
    xterm*)
    TITLEBAR='\[\033]0;\u@\h:\w\007\]'
    ;;
    *)
    TITLEBAR=""
    ;;
  esac
#PS1="${TITLEBAR}[$WHITE\u@$BLUE_BOLD\h$WHITE \w$GREEN\$(parse_git_branch) $RED\$(~/.rvm/bin/rvm-prompt v g)$WHITE]\$ "
#PS1="${TITLEBAR}[$WHITE\u@$BLUE_BOLD\h$WHITE \w$GREEN\$(parse_git_branch)$WHITE]\$ "
PS1="${TITLEBAR}$WHITE\w$GREEN\$(parse_git_branch)$WHITE\$ "
PS2='> '
PS4='+ '
}
pimp_prompt
export MODULE_VERSION="$TMPMV"
export MODULE_NAME="$TMPMN"
export TMPMV TMPMN

